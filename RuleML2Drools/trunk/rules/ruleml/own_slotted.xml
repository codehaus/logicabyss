<?xml version="1.0" encoding="UTF-8"?>

<RuleML xmlns="http://www.ruleml.org/1.0/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ruleml.org/1.0/xsd http://www.ruleml.org/1.0/xsd/datalog.xsd">

	<Assert mapClosure="universal">

		<!-- start XML comment ... This example rulebase contains four rules. The 
			first and second rules are implications; the third and fourth ones are facts. 
			In English: The first rule implies that a person owns an object if that person 
			buys the object from a merchant and the person keeps the object. As an OrdLab 
			Tree: Implies~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
			* * if * then * * * And~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Atom~~~~~~~~~~~~~~~~~~ 
			| | * | | | | op * | | | | * | | Atom~~~~~~~~~~~~~~~~~~~~~~~~~~~ Atom~~~~~~~~~~~~~~~~~~ 
			Rel Var Var * | | | * | | . . . op * | | | op * | | . . . * | | | * | | . 
			. . Rel Var Var Var Rel Var Var own person object . . . . . . . . . . . . 
			. . . . . . . . . buy person merchant object keep person object ... end XML 
			comment -->

		<Implies>
			<if>
				<And>
					<Atom>
						<op>
							<Rel>buy</Rel>
						</op>
						<slot>
							<Ind>buyer</Ind>
							<Var>person</Var>
						</slot>
						<slot>
							<Ind>seller</Ind>
							<Var>merchant</Var>
						</slot>
						<slot>
							<Ind>item</Ind>
							<Var>object</Var>
						</slot>
					</Atom>
					<Atom>
						<op>
							<Rel>keep</Rel>
						</op>
						<slot>
							<Ind>keeper</Ind>
							<Var>person</Var>
						</slot>
						<slot>
							<Ind>item</Ind>
							<Var>object</Var>
						</slot>
					</Atom>
				</And>
			</if>
			<then>
				<Atom>
					<op>
						<Rel>own</Rel>
					</op>
					<slot>
						<Ind>owner</Ind>
						<Var>person</Var>
					</slot>
					<slot>
						<Ind>item</Ind>
						<Var>object</Var>
					</slot>
				</Atom>
			</then>
		</Implies>

		<!-- The second rule implies that a person buys an object from a merchant 
			if the merchant sells the object to the person. -->

		<Implies>
			<if>
				<Atom>
					<op>
						<Rel>sell</Rel>
					</op>
					<slot>
						<Ind>seller</Ind>
						<Var>merchant</Var>
					</slot>
					<slot>
						<Ind>buyer</Ind>
						<Var>person</Var>
					</slot>
					<slot>
						<Ind>item</Ind>
						<Var>object</Var>
					</slot>
				</Atom>
			</if>
			<then>
				<Atom>
					<op>
						<Rel>buy</Rel>
					</op>
					<slot>
						<Ind>buyer</Ind>
						<Var>person</Var>
					</slot>
					<slot>
						<Ind>seller</Ind>
						<Var>merchant</Var>
					</slot>
					<slot>
						<Ind>item</Ind>
						<Var>object</Var>
					</slot>
				</Atom>
			</then>
		</Implies>

		<!-- The third rule is a fact that asserts that John sells XMLBible to 
			Mary. -->


		<Atom>
			<op>
				<Rel>sell</Rel>
			</op>
			<slot>
				<Ind>seller</Ind>
				<Ind>John</Ind>
			</slot>
			<slot>
				<Ind>buyer</Ind>
				<Ind>Mary</Ind>
			</slot>
			<slot>
				<Ind>item</Ind>
				<Ind>XMLBible</Ind>
			</slot>
		</Atom>


		<!-- The fourth rule is a fact that asserts that Mary keeps XMLBible. Observe 
			that this fact is binary - i.e., there are two arguments for the relation. 
			RDF viewed as a logical knowledge representation is, likewise, binary, although 
			its arguments have type restrictions, e.g., the first must be a resource 
			(basically, a URI). -->

		<Atom>
			<op>
				<Rel>keep</Rel>
			</op>
			<slot>
				<Ind>keeper</Ind>
				<Ind>Mary</Ind>
			</slot>
			<slot>
				<Ind>item</Ind>
				<Ind>XMLBible</Ind>
			</slot>
		</Atom>
	</Assert>

</RuleML>